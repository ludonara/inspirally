{"version":3,"sources":["components/Settings.jsx","components/Suggestion.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Settings","props","useState","closed","setClosed","className","onClick","themesLabel","categories","map","c","key","toggleCategory","selectedCategories","indexOf","setLanguage","rel","target","href","version","Suggestion","onSwipedLeft","eventData","next","selected","t","d","onboardingTitle","onboardingSubtitle","nextLabel","startLabel","TRANSLATION","fr","themes","start","en","saveInLocalStorage","value","localStorage","setItem","JSON","stringify","loadFromLocalStorage","defaultValue","item","getItem","parse","userLanguage","navigator","language","split","reHydratedState","includes","persistedData","played","App","setPlayed","data","filteredData","setFilteredData","setSelected","setSelectedCategories","useEffect","reduce","sort","nextData","filter","fd","randomData","Math","floor","random","length","slice","category","lg","newSelectedCategories","sc","clear","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7e274e99.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  FaGithub,\n  FaTwitter,\n  FaHeart,\n  FaAngleUp,\n  FaAngleDown\n} from \"react-icons/fa\";\nimport \"./Settings.scss\";\n\nexport default function Settings(props) {\n  const [closed, setClosed] = useState(false);\n\n  return (\n    <div\n      className={`settings__panel ${closed ? \"settings__panel--closed\" : \"\"}`}\n    >\n      <div className=\"settings__toggle\" onClick={() => setClosed(!closed)}>\n        {closed ? <FaAngleUp /> : <FaAngleDown />}\n        <div>{props.themesLabel}</div>\n      </div>\n      <div className=\"categories\">\n        {props.categories.map(c => (\n          <div\n            key={c}\n            onClick={() => props.toggleCategory(c)}\n            className={`category ${\n              props.selectedCategories.indexOf(c) > -1\n                ? \"category--selected\"\n                : \"\"\n            }`}\n          >\n            {c}\n          </div>\n        ))}\n      </div>\n      <div className=\"bottom\">\n        <div className=\"languages\">\n          <button onClick={() => props.setLanguage(\"fr\")}>FR</button> |{\" \"}\n          <button onClick={() => props.setLanguage(\"en\")}>EN</button>\n        </div>\n        <div className=\"credits\">\n          <div>\n            Made with <FaHeart /> by{\" \"}\n            <a\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://twitter.com/ludonara\"\n            >\n              ludonara <FaTwitter />\n            </a>\n            {\" | \"}\n            <a\n              href=\"https://github.com/ludonara/inspirally\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <FaGithub />\n            </a>\n            - version {props.version}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Swipeable } from \"react-swipeable\";\nimport \"./Suggestion.scss\";\n\nexport default function Suggestion(props) {\n  return (\n    <div className={`suggestion`}>\n      <Swipeable\n        onSwipedLeft={(eventData) => props.next()}\n        className=\"suggestion__display\"\n      >\n        {props.selected ? (\n          <>\n            <div className=\"suggestion__theme\">{props.selected.c}</div>\n            <div className=\"suggestion__title\">{props.selected.t}</div>\n            <div className=\"suggestion__meta\">{props.selected.d}</div>\n          </>\n        ) : (\n          <div className=\"onboarding\">\n            <div>{props.onboardingTitle}</div>\n            <div>{props.onboardingSubtitle}</div>\n          </div>\n        )}\n      </Swipeable>\n      <button className=\"button button--primary\" onClick={() => props.next()}>\n        {props.selected ? props.nextLabel : props.startLabel}\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport Settings from \"./components/Settings\";\nimport Suggestion from \"./components/Suggestion\";\nimport data from \"./data/suggests.json\";\n\nconst ACCEPTED_LANGUAGE = [\"fr\", \"en\"];\n\nconst TRANSLATION = {\n  fr: {\n    next: \"suivant\",\n    themes: \"thèmes\",\n    start: \"démarrer\",\n    onboardingTitle: \"Dessins, mimes, devinettes ?\",\n    onboardingSubtitle: \"À vous d'inventer les règles!\"\n  },\n  en: {\n    next: \"next\",\n    themes: \"topics\",\n    start: \"let's go\",\n    onboardingTitle: \"Drawings, mimes, riddles\",\n    onboardingSubtitle: \"Invent your own rules\"\n  }\n};\n\nconst saveInLocalStorage = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nconst loadFromLocalStorage = (key, defaultValue) => {\n  const item = localStorage.getItem(key);\n  return item === \"undefined\" ? defaultValue : JSON.parse(item) || defaultValue;\n};\n\nconst userLanguage = (\n  navigator.language ||\n  navigator.userLanguage ||\n  \"en-EN\"\n).split(\"-\")[0];\n\nconst appLanguage = ACCEPTED_LANGUAGE.includes(userLanguage)\n  ? userLanguage\n  : \"fr\";\n\nconst reHydratedState = {\n  language: loadFromLocalStorage(\"language\", appLanguage),\n  selectedCategories: loadFromLocalStorage(\"selectedCategories\", []),\n  persistedData: loadFromLocalStorage(\"filteredData\"),\n  selected: loadFromLocalStorage(\"selected\"),\n  played: loadFromLocalStorage(\"played\", [])\n};\n\nfunction App() {\n  // store last 20 words played\n  const [language, setLanguage] = useState(reHydratedState.language);\n  const [played, setPlayed] = useState(reHydratedState.played);\n  const [filteredData, setFilteredData] = useState(\n    reHydratedState.persistedData || data[language]\n  );\n  const [selected, setSelected] = useState(reHydratedState.selected);\n  const [selectedCategories, setSelectedCategories] = useState(\n    reHydratedState.selectedCategories\n  );\n\n  // persist state in localstorage to rehydate application\n  useEffect(() => {\n    return function persist() {\n      saveInLocalStorage(\"selectedCategories\", selectedCategories);\n      saveInLocalStorage(\"filteredData\", filteredData);\n      saveInLocalStorage(\"played\", played);\n      saveInLocalStorage(\"selected\", selected);\n    };\n  });\n\n  const categories = data[language]\n    .reduce(\n      (categories, item) =>\n        categories.includes(item.c) ? categories : [...categories, item.c],\n      []\n    )\n    .sort();\n\n  const next = () => {\n    const nextData = filteredData.filter(fd => !played.includes(fd.t));\n    const randomData = nextData[Math.floor(Math.random() * nextData.length)];\n    setSelected(randomData);\n    setPlayed([randomData.t, ...played.slice(0, 20)]);\n  };\n\n  const toggleCategory = (category, lg) => {\n    const newSelectedCategories = selectedCategories.includes(category)\n      ? selectedCategories.filter(sc => sc !== category)\n      : [...selectedCategories, category];\n\n    setSelectedCategories(newSelectedCategories);\n\n    const filteredData =\n      newSelectedCategories.length > 0\n        ? data[lg || language].filter(item =>\n            newSelectedCategories.includes(item.c)\n          )\n        : data[lg || language];\n    setFilteredData(filteredData);\n  };\n\n  const setLg = lg => {\n    localStorage.clear();\n    setSelectedCategories([], lg);\n    setLanguage(lg);\n  };\n\n  return (\n    <div className=\"App\">\n      <Suggestion\n        selected={selected}\n        next={next}\n        nextLabel={TRANSLATION[language].next}\n        startLabel={TRANSLATION[language].start}\n        onboardingTitle={TRANSLATION[language].onboardingTitle}\n        onboardingSubtitle={TRANSLATION[language].onboardingSubtitle}\n      />\n      <Settings\n        categories={categories}\n        selectedCategories={selectedCategories}\n        toggleCategory={toggleCategory}\n        themesLabel={TRANSLATION[language].themes}\n        setLanguage={setLg}\n        version=\"1.3\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}